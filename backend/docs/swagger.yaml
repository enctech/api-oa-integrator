basePath: /api/
definitions:
  auth.CreateUserRequest:
    properties:
      name:
        type: string
      password:
        type: string
      permissions:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  auth.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  config.IntegratorConfig:
    properties:
      clientId:
        type: string
      displayName:
        type: string
      extra:
        additionalProperties:
          type: string
        type: object
      id:
        type: string
      insecureSkipVerify:
        type: boolean
      integratorName:
        type: string
      name:
        type: string
      plazaIdMap:
        additionalProperties:
          type: string
        type: object
      providerId:
        type: integer
      serviceProviderId:
        type: string
      surcharge:
        type: number
      surchargeType:
        $ref: '#/definitions/database.SurchargeType'
      taxRate:
        type: number
      url:
        type: string
    type: object
  config.SnbConfig:
    properties:
      devices:
        items:
          type: string
        type: array
      endpoint:
        type: string
      facilities:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  database.SurchargeType:
    enum:
    - percentage
    - exact
    type: string
    x-enum-varnames:
    - SurchargeTypePercentage
    - SurchargeTypeExact
  oa.BusinessTransaction:
    properties:
      id:
        type: string
    type: object
  oa.CancelJobWrapper:
    properties:
      cancel:
        properties:
          reason:
            properties:
              cancelCode:
                type: string
              reasonText:
                type: string
            type: object
        type: object
    type: object
  oa.Configuration:
    properties:
      supportedFunctions:
        items:
          type: string
        type: array
    type: object
  oa.Customer:
    properties:
      customerGroup:
        type: string
      customerId:
        type: string
      customerName:
        type: string
    type: object
  oa.CustomerInformation:
    properties:
      customer:
        $ref: '#/definitions/oa.Customer'
    type: object
  oa.FinalMessageSB:
    properties:
      finalState:
        type: string
      paymentMedia:
        type: string
    type: object
  oa.FinalMessageSBWrapper:
    properties:
      finalMessageSB:
        $ref: '#/definitions/oa.FinalMessageSB'
    type: object
  oa.Job:
    properties:
      businessTransaction:
        $ref: '#/definitions/oa.BusinessTransaction'
      customerInformation:
        $ref: '#/definitions/oa.CustomerInformation'
      jobId:
        properties:
          id:
            type: string
        type: object
      jobType:
        type: string
      mediaDataList:
        properties:
          identifier:
            properties:
              name:
                type: string
            type: object
          mediaType:
            type: string
        type: object
      paymentData:
        $ref: '#/definitions/oa.PaymentData'
      providerInformation:
        properties:
          provider:
            properties:
              providerId:
                type: string
              providerName:
                type: string
            type: object
        type: object
      timeAndPlace:
        properties:
          computer:
            properties:
              computerNumber:
                type: string
            type: object
          device:
            properties:
              deviceNumber:
                type: string
              deviceType:
                type: string
            type: object
          facility:
            properties:
              facilityNumber:
                type: string
            type: object
          operator:
            properties:
              operatorNumber:
                type: string
            type: object
          transactionTimeStamp:
            properties:
              timeStamp:
                type: string
            type: object
        type: object
    type: object
  oa.JobWrapper:
    properties:
      job:
        $ref: '#/definitions/oa.Job'
    type: object
  oa.MediaDataWrapper:
    properties:
      mediaData:
        properties:
          hashValue:
            properties:
              value:
                type: string
            type: object
          mediaType:
            type: string
        type: object
    type: object
  oa.OriginalAmount:
    properties:
      amount:
        type: string
      vatRate:
        type: string
    type: object
  oa.PaymentData:
    properties:
      originalAmount:
        $ref: '#/definitions/oa.OriginalAmount'
      remainingAmount:
        properties:
          amount:
            type: string
          text:
            type: string
          vatRate:
            type: string
        type: object
    type: object
  oa.VersionRequestWrapper:
    properties:
      version:
        properties:
          configuration:
            $ref: '#/definitions/oa.Configuration'
          entervoVersion:
            type: string
          sbAuthorizationVersion:
            type: string
        type: object
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a server OA integrator.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Swagger OA Integrator API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: For user to login into admin
      parameters:
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: user login
      tags:
      - auth
  /auth/user:
    post:
      consumes:
      - application/json
      description: For admin to create new user
      parameters:
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/auth.CreateUserRequest'
      produces:
      - application/json
      responses: {}
      summary: create new user
      tags:
      - auth
  /auth/user/{id}:
    delete:
      consumes:
      - application/json
      description: For admin to delete user
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: delete user
      tags:
      - auth
  /auth/users:
    get:
      consumes:
      - application/json
      description: For admin to see the list of users registered
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: get list of users
      tags:
      - auth
  /config/integrator-config:
    get:
      consumes:
      - application/json
      description: Get configurations for all integrators
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get configs for all integrator
      tags:
      - config
    post:
      consumes:
      - application/json
      description: Create configuration required for OA to send data to integrator.
      parameters:
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/config.IntegratorConfig'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Create config for integrator
      tags:
      - config
  /config/integrator-config/{id}:
    delete:
      consumes:
      - application/json
      description: Create configuration required for OA to send data to integrator.
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Delete config for integrator
      tags:
      - config
    get:
      consumes:
      - application/json
      description: Get configuration for a specific integrator
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get config for specific integrator
      tags:
      - config
    put:
      consumes:
      - application/json
      description: Create configuration required for OA to send data to integrator.
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/config.IntegratorConfig'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Create config for integrator
      tags:
      - config
  /config/integrators:
    get:
      consumes:
      - application/json
      description: Get integrators that will be used in integrator config
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get integrators name
      tags:
      - config
  /config/snb-config:
    get:
      consumes:
      - application/json
      description: Get all configuration required for OA to works.
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get all config for snb
      tags:
      - config
    post:
      consumes:
      - application/json
      description: Create configuration required for OA to works.
      parameters:
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/config.SnbConfig'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Create config for snb
      tags:
      - config
  /config/snb-config/{id}:
    delete:
      consumes:
      - application/json
      description: Delete configuration required for OA to works.
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Delete config for snb
      tags:
      - config
    get:
      consumes:
      - application/json
      description: Get configuration required for OA to works.
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get config for snb
      tags:
      - config
    put:
      consumes:
      - application/json
      description: Update configuration required for OA to works.
      parameters:
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/config.SnbConfig'
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Update config for snb
      tags:
      - config
  /health:
    get:
      consumes:
      - application/json
      description: To check overall system health
      parameters:
      - description: Facility
        in: query
        name: facility
        type: integer
      - description: Device
        in: query
        name: device
        type: integer
      produces:
      - application/json
      responses: {}
      summary: check system health
      tags:
      - health
  /misc/:
    get:
      consumes:
      - application/json
      description: Get all misc data used in homepage
      parameters:
      - description: Start At
        format: dateTime
        in: query
        name: startAt
        type: string
      - description: End At
        format: dateTime
        in: query
        name: endAt
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get all misc data used in homepage
      tags:
      - misc
  /misc/integrator:
    get:
      consumes:
      - application/json
      description: Get all integrator status
      produces:
      - application/json
      responses: {}
      summary: Get all integrator status
      tags:
      - misc
  /oa/AuthorizationService3rdParty/{facility}/{device}/{jobId}:
    post:
      consumes:
      - application/xml
      description: Creates new job and sends the required information as URI and <job>
        element to 3rd party system.
      parameters:
      - description: Facility
        in: path
        name: facility
        required: true
        type: string
      - description: Device
        in: path
        name: device
        required: true
        type: string
      - description: Job ID
        in: path
        name: jobId
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/oa.JobWrapper'
      produces:
      - application/xml
      responses: {}
      summary: S&B creates new job
      tags:
      - oa
  /oa/AuthorizationService3rdParty/{facility}/{device}/{jobId}/cancel:
    put:
      consumes:
      - application/xml
      description: This request cancels a running job on the 3rd party side. The job
        is identified by its resource /facility/device/jobid
      parameters:
      - description: Facility
        in: path
        name: facility
        required: true
        type: string
      - description: Device
        in: path
        name: device
        required: true
        type: string
      - description: Job ID
        in: path
        name: jobId
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/oa.CancelJobWrapper'
      produces:
      - application/xml
      responses: {}
      summary: Cancels a running job
      tags:
      - oa
  /oa/AuthorizationService3rdParty/{facility}/{device}/{jobId}/finalmessage:
    put:
      consumes:
      - application/xml
      description: This request sends the last message for a job. The job is identified
        by its resources /facility/device/jobid
      parameters:
      - description: Facility
        in: path
        name: facility
        required: true
        type: string
      - description: Device
        in: path
        name: device
        required: true
        type: string
      - description: Job ID
        in: path
        name: jobId
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/oa.FinalMessageSBWrapper'
      produces:
      - application/xml
      responses: {}
      summary: Receive Final Message from S&B
      tags:
      - oa
  /oa/AuthorizationService3rdParty/{facility}/{device}/{jobId}/medialist:
    post:
      consumes:
      - application/xml
      description: Creates new media data for an existing job and sends the required
        information as a <mediaData> element to the 3rd party system.
      parameters:
      - description: Facility
        in: path
        name: facility
        required: true
        type: string
      - description: Device
        in: path
        name: device
        required: true
        type: string
      - description: Job ID
        in: path
        name: jobId
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/oa.MediaDataWrapper'
      produces:
      - application/xml
      responses: {}
      summary: Creates new media data
      tags:
      - oa
  /oa/AuthorizationService3rdParty/version:
    put:
      consumes:
      - application/xml
      description: get the version and configuration available
      parameters:
      - description: Request Body
        in: body
        name: request
        schema:
          $ref: '#/definitions/oa.VersionRequestWrapper'
      produces:
      - application/xml
      responses: {}
      summary: check version
      tags:
      - oa
  /transactions/integrator:
    get:
      consumes:
      - application/json
      description: To get all transactions made through OA
      parameters:
      - description: LPN
        in: query
        name: lpn
        type: string
      - description: Status
        in: query
        name: status
        type: string
      - description: Integrator Name
        in: query
        name: integratorName
        type: string
      - description: Start At
        format: dateTime
        in: query
        name: startAt
        type: string
      - description: End At
        format: dateTime
        in: query
        name: endAt
        type: string
      - description: PerPage
        in: query
        name: perPage
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses: {}
      summary: get all OA logs
      tags:
      - transactions
  /transactions/logs:
    get:
      consumes:
      - application/json
      description: To check overall system health
      parameters:
      - description: Before
        format: dateTime
        in: query
        name: endAt
        required: true
        type: string
      - description: After
        format: dateTime
        in: query
        name: startAt
        type: string
      - description: Message
        in: query
        name: message
        type: string
      - description: Fields
        in: query
        name: fields
        type: string
      - description: PerPage
        in: query
        name: perPage
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses: {}
      summary: get all logs
      tags:
      - transactions
  /transactions/oa:
    get:
      consumes:
      - application/json
      description: To get all transactions made through OA
      parameters:
      - description: Start At
        format: dateTime
        in: query
        name: startAt
        type: string
      - description: End At
        format: dateTime
        in: query
        name: endAt
        required: true
        type: string
      - description: Exit Lane
        in: query
        name: exitLane
        type: string
      - description: Entry Lane
        in: query
        name: entryLane
        type: string
      - description: Licence Plate Number
        in: query
        name: lpn
        type: string
      - description: Facility
        in: query
        name: facility
        type: string
      - description: Job ID
        in: query
        name: jobid
        type: string
      - description: PerPage
        in: query
        name: perPage
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses: {}
      summary: get all OA logs
      tags:
      - transactions
  /transactions/oa-latest:
    get:
      consumes:
      - application/json
      description: To get all latest update transactions made through OA
      parameters:
      - description: Start At
        format: dateTime
        in: query
        name: startAt
        type: string
      - description: End At
        format: dateTime
        in: query
        name: endAt
        required: true
        type: string
      - description: PerPage
        in: query
        name: perPage
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses: {}
      summary: get latest update on OA logs
      tags:
      - transactions
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/oa/version": {
            "put": {
                "description": "get the version and configuration available",
                "consumes": [
                    "application/xml"
                ],
                "produces": [
                    "application/xml"
                ],
                "tags": [
                    "oa"
                ],
                "summary": "check version",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/oa.VersionRequestWrapper"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/oa/{facility}/{device}/{jobId}/cancel": {
            "put": {
                "description": "This request cancels a running job on the 3rd party side. The job is identified by its resource /facility/device/jobid",
                "consumes": [
                    "application/xml"
                ],
                "produces": [
                    "application/xml"
                ],
                "tags": [
                    "oa"
                ],
                "summary": "Cancels a running job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility",
                        "name": "facility",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device",
                        "name": "device",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/oa.CancelJobWrapper"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/oa/{facility}/{device}/{jobId}/finalmessage": {
            "put": {
                "description": "This request sends the last message for a job. The job is identified by its resources /facility/device/jobid",
                "consumes": [
                    "application/xml"
                ],
                "produces": [
                    "application/xml"
                ],
                "tags": [
                    "oa"
                ],
                "summary": "Receive Final Message from S\u0026B",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility",
                        "name": "facility",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device",
                        "name": "device",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/oa.FinalMessageSBWrapper"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/oa/{facility}/{device}/{jobId}/medialist": {
            "put": {
                "description": "Creates new media data for an existing job and sends the required information as a \u003cmediaData\u003e element to the 3rd party system.",
                "consumes": [
                    "application/xml"
                ],
                "produces": [
                    "application/xml"
                ],
                "tags": [
                    "oa"
                ],
                "summary": "Creates new media data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility",
                        "name": "facility",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device",
                        "name": "device",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/oa.MediaDataWrapper"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "oa.CancelJobWrapper": {
            "type": "object",
            "properties": {
                "cancel": {
                    "type": "object",
                    "properties": {
                        "reason": {
                            "type": "object",
                            "properties": {
                                "cancelCode": {
                                    "type": "string"
                                },
                                "reasonText": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "oa.Configuration": {
            "type": "object",
            "properties": {
                "supportedFunctions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "oa.FinalMessageSB": {
            "type": "object",
            "properties": {
                "finalState": {
                    "type": "string"
                },
                "paymentMedia": {
                    "type": "string"
                }
            }
        },
        "oa.FinalMessageSBWrapper": {
            "type": "object",
            "properties": {
                "finalMessageSB": {
                    "$ref": "#/definitions/oa.FinalMessageSB"
                }
            }
        },
        "oa.MediaDataWrapper": {
            "type": "object",
            "properties": {
                "mediaData": {
                    "type": "object",
                    "properties": {
                        "hashValue": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "oa.VersionRequestWrapper": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "object",
                    "properties": {
                        "configuration": {
                            "$ref": "#/definitions/oa.Configuration"
                        },
                        "entervoVersion": {
                            "type": "string"
                        },
                        "sbAuthorizationVersion": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger OA Integrator API",
	Description:      "This is a server OA integrator.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
